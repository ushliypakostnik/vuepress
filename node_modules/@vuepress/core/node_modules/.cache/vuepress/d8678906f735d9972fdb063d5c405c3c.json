{"remainingRequest":"/home/levon/projects/github/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/levon/projects/github/vuepress/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/levon/projects/github/vuepress/node_modules/vue-loader/lib/index.js??ref--1-1!/home/levon/projects/github/vuepress/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/levon/projects/github/vuepress/docs/start/bad.md?vue&type=template&id=b00696ea&","dependencies":[{"path":"/home/levon/projects/github/vuepress/docs/start/bad.md","mtime":1591742910211},{"path":"/home/levon/projects/github/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/levon/projects/github/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/levon/projects/github/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/levon/projects/github/vuepress/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/levon/projects/github/vuepress/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}